<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
           ">
<!--	<import resource="applicationContext.xml"/>-->
	<context:component-scan base-package="com.itrum.ssm.demo.web"/>
	<!--设置json的编码-->
	<mvc:annotation-driven/>

	<!--	<bean id="multipartResolver"-->
	<!--			class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
	<!--		<property name="maxUploadSize" value="500000"/>-->
	<!--		<property name="defaultEncoding" value="UTF-8"/>-->
	<!--	</bean>-->
	<!--配置静态文件路径-->
<!--	<mvc:resources mapping="/static/**" location="/static/"/>-->
	<!-- 完成视图的对应 -->
	<!-- 对转向页面的路径解析。prefix：前缀， suffix：后缀 -->
	<!-- 配置视图解析器 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- JSP文件所在的目录 -->
		<property name="prefix" value="/pages/" />
		<!-- 文件的后缀名 -->
		<property name="suffix" value=".jsp" />
	</bean>
	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/img/" mapping="/img/**" />
<!--	<mvc:resources location="/js/" mapping="/js/**" />-->
	<mvc:resources location="/plugins/" mapping="/plugins/**" />

	<!--
        支持AOP的注解支持，AOP底层使用代理技术
        JDK动态代理，要求必须有接口
        cglib代理，生成子类对象，proxy-target-class="true" 默认使用cglib的方式
    -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
</beans>